<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" version="2.5">
  <display-name>app</display-name>
  
 <!-- Druid,监控数据库,以及WEB访问连接信息 -->  
<!-- 配置好后访问 http://ip：port/projectName/druid/index.html --> 
<filter>  
    <filter-name>DruidWebStatFilter</filter-name>  
    <filter-class>com.alibaba.druid.support.http.WebStatFilter</filter-class>  
    <init-param>  
        <param-name>exclusions</param-name>  
        <param-value>*.js,*.gif,*.jpg,*.png,*.ico,*.css,*.ico,*.jsp,*.eot,*.woff,/druid/*,/download/*</param-value>  
    </init-param>  
     <!-- 监控单个url调用的sql列表 -->
    <init-param>
        <param-name>profileEnable</param-name> 
        <param-value>true</param-value>
    </init-param>

    <!-- 可以关闭session统计功能 -->
    <!-- <init-param>
        <param-name>sessionStatEnable</param-name> 
        <param-value>false</param-value>
    </init-param> -->
</filter>  
<filter-mapping>  
    <filter-name>DruidWebStatFilter</filter-name>  
    <url-pattern>/*</url-pattern>  
</filter-mapping>  

<!-- 配置 Druid 监控信息显示页面   该配置可以访问监控界面，配置好后，访问http://ip地址:端口号/项目名/druid/index.html-->  
<servlet>
    <servlet-name>DruidStatView</servlet-name>
    <servlet-class>com.alibaba.druid.support.http.StatViewServlet</servlet-class>
     <init-param>  
       <!-- 允许清空统计数据 -->  
       <param-name>resetEnable</param-name>  
       <param-value>true</param-value>  
    </init-param>  
  
  <!--   ip过滤规则
        （1）deny优先于allow，如果在deny列表中，就算在allow列表中，也会被拒绝。
        （2）如果allow没有配置或者为空，则允许所有访问
        
        ip配置格式
          <IP>
          或者
          <IP>/<SUB_NET_MASK_size>
        其中
          128.242.127.1/24
        24表示，前面24位是子网掩码，比对的时候，前面24位相同就匹配。
        不支持IPV6
        由于匹配规则不支持IPV6，配置了allow或者deny之后，会导致IPV6无法访问。
     -->            
     
    <init-param>
       <!-- 访问IP白名单 -->
       <param-name>allow</param-name>
       <param-value></param-value>
    </init-param>
    <init-param>
       <!-- 访问IP黑名单 --> 
        <param-name>deny</param-name> 
        <param-value>192.168.1.252</param-value>
    </init-param>
    <init-param>  
        <!-- 用户名 -->  
        <param-name>loginUsername</param-name>  
        <param-value>admin</param-value>  
    </init-param>  
    <init-param>  
        <!-- 密码 -->  
        <param-name>loginPassword</param-name>  
        <param-value>200814</param-value>  
    </init-param>  
</servlet>

<servlet-mapping>
    <servlet-name>DruidStatView</servlet-name>
    <url-pattern>/druid/*</url-pattern>
</servlet-mapping>


  <!-- 加载spring容器 -->  
    <context-param>  
        <param-name>contextConfigLocation</param-name>  
        <param-value>classpath:spring/applicationContext.xml</param-value>  
    </context-param>  
  
    
    <!-- log4j-->  
    <context-param>  
    <param-name>log4jConfigLocation</param-name>  
    <param-value>classpath:config/log4j.properties</param-value>  
  </context-param>  
  <listener>  
    <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>  
  </listener>
    <listener>  
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>  
    </listener>                     
<!-- 配置springmvc的dispatchServlet的处理类 -->  
  <servlet>  
    <servlet-name>srpingDispatherServlet</servlet-name>  
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>  
    <!-- 配置DispatchServlet的初始化参数,加载配置文件(配置处理映射器,适配器)springmvc配置文件的位置和名称 -->     
    <init-param>  
        <param-name>contextConfigLocation</param-name>  
        <param-value>classpath:spring/spring-mvc.xml</param-value>  
    </init-param>    
 
    <load-on-startup>1</load-on-startup>  
  </servlet>  
   
    
    
  <!-- 配置springmvc的DispathServlet的映射匹配URL -->  
  <servlet-mapping>  
    <servlet-name>srpingDispatherServlet</servlet-name>  

    <url-pattern>/</url-pattern>  
  </servlet-mapping>  
   <!-- shiro过滤器定义 -->
	<filter>  
	    <filter-name>shiroFilter</filter-name>  
	    <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>  
    <init-param>  
    <!-- 该值缺省为false,表示生命周期由SpringApplicationContext管理,设置为true则表示由ServletContainer管理 -->  
    <param-name>targetFilterLifecycle</param-name>  
    <param-value>true</param-value>  
    </init-param>  
	</filter>  
	<filter-mapping>  
	        <filter-name>shiroFilter</filter-name>  
	        <url-pattern>/*</url-pattern>  
	</filter-mapping>
	  
	 
   <!-- 自定义filter -->
	 <filter> 
	    <filter-name>PerFilter</filter-name>  
	    <filter-class>com.dly.app.commons.filter.PerFilter</filter-class>  
    <init-param>  
    <!-- 该值缺省为false,表示生命周期由SpringApplicationContext管理,设置为true则表示由ServletContainer管理 -->  
    <param-name>targetFilterLifecycle</param-name>  
    <param-value>true</param-value>  
    </init-param>  
	</filter>  
	<filter-mapping>  
        <filter-name>PerFilter</filter-name>  
        <url-pattern>/*</url-pattern>  
	</filter-mapping>
  <!-- Spring刷新Introspector防止内存泄露 -->
  <listener>
		<listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
	</listener>
  <welcome-file-list>
    <welcome-file>html/index.html</welcome-file>
  </welcome-file-list>
</web-app>